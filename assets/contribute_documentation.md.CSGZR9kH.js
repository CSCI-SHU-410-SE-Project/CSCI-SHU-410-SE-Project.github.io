import{_ as t,c as a,o as s,ag as n}from"./chunks/framework.B-XtCDNB.js";const u=JSON.parse('{"title":"Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"contribute/documentation.md","filePath":"contribute/documentation.md","lastUpdated":1747172293000}'),i={name:"contribute/documentation.md"};function o(r,e,d,c,l,h){return s(),a("div",null,[...e[0]||(e[0]=[n(`<h1 id="documentation" tabindex="-1">Documentation <a class="header-anchor" href="#documentation" aria-label="Permalink to &quot;Documentation&quot;">​</a></h1><h2 id="documentation-website" tabindex="-1">Documentation Website <a class="header-anchor" href="#documentation-website" aria-label="Permalink to &quot;Documentation Website&quot;">​</a></h2><p>This documentation website is built with <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a>. You can find the source code for the site under the <code>docs/</code> directory. To start a development server for the documentation website, run the following command (at project root):</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:dev</span></span></code></pre></div><p>Any changes to the documentation will automatically trigger reload. Most parts of the documentation are written purely in Markdown. Refer to the <a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a> documentation if you need to modify the structure or use advanced features.</p><p>If you want to build the documentation website into a static site instead of using the development server, you can use the following commands:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:preview</span></span></code></pre></div><p>Note that if you are only modifying the documentation contents without touching the setup, this step is not strictly necessary.</p><h2 id="internal-backend-rustdoc" tabindex="-1">Internal Backend Rustdoc <a class="header-anchor" href="#internal-backend-rustdoc" aria-label="Permalink to &quot;Internal Backend Rustdoc&quot;">​</a></h2><p>The Deskulpt backend is documented with <a href="https://doc.rust-lang.org/rustdoc/" target="_blank" rel="noreferrer">rustdoc</a> for developers&#39; internal reference. Unlike the public docs hosted on <a href="https://docs.rs/" target="_blank" rel="noreferrer">docs.rs</a>, the internal rustdoc includes private crate items and is meant specifically to be used by Deskulpt developers. It is built separately from the main documentation website and hosted under its <code>rustdoc/</code> subdirectory. To build the internal backend rustdoc locally, run the following command:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docs:rs</span></span></code></pre></div><p>This command will print the path to the generated documentation, which you can open directly in our browser.</p>`,12)])])}const m=t(i,[["render",o]]);export{u as __pageData,m as default};
