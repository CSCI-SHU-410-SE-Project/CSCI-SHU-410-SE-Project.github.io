searchState.loadedDescShard("deskulpt_specta", 0, "This crate implements utilities for generating frontend …\nExporter for Deskulpt TypeScript bindings.\nErrors in deskulpt-specta.\nReturns the argument unchanged.\nHelper functions for the Handlebars template engine.\nCalls <code>U::from(self)</code>.\nData for the bindings template.\nContains the error value\nThe error type for all errors in deskulpt-specta.\nContains the success value\nResult type for deskulpt-specta.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIndent text by a certain number of spaces.\nData for the bindings template.\nData for a command in the bindings template.\nData for an argument for a command in the bindings …\nData for an event in the bindings template.\nThe command arguments.\nAll commands in the bindings.\nThe docstring of the command.\nAll events in the bindings.\nReturns the argument unchanged.\nCreate an instance from event name and type.\nCreate an instance from argument name and type.\nReturns the argument unchanged.\nCreate an instance from function information.\nReturns the argument unchanged.\nCreate an instance from export context.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe key in the generated <code>events</code> object.\nThe key in the generated <code>commands</code> object.\nThe name of the event.\nThe name of the argument.\nThe name of the command.\nThe type representation of the return value.\nThe type representation of the event.\nThe type representation of the argument.\nAll types in the bindings.")